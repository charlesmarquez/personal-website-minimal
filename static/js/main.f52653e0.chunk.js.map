{"version":3,"sources":["components/Header/Chips.js","components/Header/Icons.js","components/Header/Header.js","components/Sections/SectionHeader.js","components/Sections/Projects.js","components/Sections/Skills.js","components/Sections/Blogs.js","components/Sections/Contact.js","components/Sections/Experience.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","Chips","classes","className","Chip","variant","size","label","href","target","rel","fontSize","color","Typography","gutterBottom","Icons","props","projectList","title","desc","url","repo","ProjectLine","ProjectLink","GithubLink","Projects","SectionHeader","map","project","skillList","SkillLine","Skills","skill","Blogs","ContactList","ContactLine","Contact","contact","Experience","textAlign","width","backgroundColor","palette","background","paper","chip","marginRight","header","section","section3","App","Header","Divider","hidden","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f52653e0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.7),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst Chips = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Chip variant=\"outlined\" size=\"small\" label=\"Software Developer\" />\r\n            <Chip variant=\"outlined\" size=\"small\" label=\"Electrical Engineer\" />\r\n            <Chip variant=\"default\" size=\"small\" label=\"Available for Hire\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chips\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nexport default () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <a href=\"https://github.com/charlesmarquez\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <GitHubIcon fontSize='large' color='action'/>\r\n            </a>\r\n\r\n            <a href=\"https://www.instagram.com/charlesxmarquez/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <InstagramIcon fontSize='large' color='action'/>\r\n            </a>\r\n\r\n            <a href=\"https://www.linkedin.com/in/charles-marquez/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <LinkedInIcon fontSize='large' color='action'/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Chips from './Chips'\r\nimport Icons from './Icons'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h2\">\r\n            Charles Marquez\r\n            </Typography>\r\n            \r\n            <Chips/>\r\n            <Icons/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n                {props.label}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport SectionHeader from './SectionHeader'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'inline',\r\n      justifyContent: 'center',\r\n      flexWrap: 'nowrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst projectList = [\r\n    {\r\n        title: \"Halo Wars 2 Tracker\",\r\n        desc: \"Tracks recent activity of players on the leaderboards.\",\r\n        url: \"https://charlesmarquez.github.io/player-tracker/\",\r\n        repo: \"https://github.com/charlesmarquez/halowars-tracker/\"\r\n    },\r\n    {\r\n        title: \"Wizard Chess\",\r\n        desc: \"Voice Controlled Chess Application. \",\r\n        url: \"\",\r\n        repo: \"https://github.com/menushka/wizardchess-capstone\"\r\n    },\r\n    {\r\n        title: \"API Key Handler\",\r\n        desc: \"Priority queue for managing multiple keys to an API.\",\r\n        url: \"\",\r\n        repo: \"https://github.com/charlesmarquez/API-Key-Priority-Queue\"\r\n    }\r\n]\r\n\r\n// window.open\r\n\r\nconst ProjectLine = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n        {/* <Divider light/> */}\r\n        <Typography className={classes.root} variant=\"overline\" gutterBottom>\r\n            <div>\r\n                <b>{props.title}</b> | {props.desc}\r\n            </div>\r\n                <ProjectLink url={props.url}/>\r\n                <GithubLink repo={props.repo}/>\r\n        </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProjectLink = (props) => {\r\n    if (props.url) {\r\n        return (\r\n            <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <LinkIcon color='action'/>\r\n            </a>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst GithubLink = (props) => {\r\n    if (props.repo) {\r\n        return (\r\n            <a href={props.repo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <GitHubIcon color='action'/>\r\n            </a>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nconst Projects = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n        <SectionHeader label=\"Projects\"/>\r\n            <div className={classes.root}>\r\n                {projectList.map(project => <ProjectLine title={project.title} desc={project.desc} url={project.url} repo={project.repo}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React from 'react'\r\nimport SectionHeader from './SectionHeader'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'inline',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst skillList = [\r\n    {\r\n        label: \"Software Languages\",\r\n        desc: \"JavaScript, Python, MATLAB, PHP, SQL\"\r\n    },\r\n    {\r\n        label: \"Web Technologies\",\r\n        desc: \"Reactjs, GraphQL, MongoDB, Express.js, Node.js, Socket.io, HTML5/CSS, jQuery, SQL\"\r\n    },\r\n    {\r\n        label: \"Responsive Frameworks / Packages\",\r\n        desc: \"Material UI, React Bootstrap, Tailwind CSS, Numpy, Scipy, Matplotlib \"\r\n    },\r\n    {\r\n        label: \"APIs / Services\",\r\n        desc: \"Google APIs, Twitter, AWS, Halo Developer Portal\"\r\n    },\r\n    {\r\n        label: \"Other\",\r\n        desc: \"Git, Bash, Windows, Linux, Raspi, Microsoft Office\"\r\n    }\r\n]\r\n\r\nconst SkillLine = (props) => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div>\r\n        <Typography className={classes.root} variant=\"overline\" gutterBottom>\r\n            <b>{props.label}:</b> \r\n        </Typography>\r\n            {props.desc} \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <div>\r\n            <SectionHeader label='Technical Skills'/>\r\n            {skillList.map(skill => <SkillLine label={skill.label} desc={skill.desc}/>)}       \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Skills\r\n","import React from 'react'\r\nimport SectionHeader from './SectionHeader'\r\n\r\nconst Blogs = () => {\r\n    return (\r\n        <div>\r\n           <SectionHeader label='Blogs'/> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport SectionHeader from './SectionHeader'\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ContactList = [\r\n    {\r\n        label: 'Email',\r\n        desc: 'charles97marquez@gmail.com'\r\n    },\r\n]\r\n\r\nconst ContactLine = (props) => {\r\n    return (\r\n        <div>\r\n        <Typography variant=\"overline\" gutterBottom>\r\n        <b>{props.label}:</b> {props.desc}\r\n        </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <SectionHeader label=\"Contact\"/>\r\n            {ContactList.map(contact => <ContactLine label={contact.label} desc={contact.desc}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport SectionHeader from './SectionHeader'\r\n\r\nconst Experience = () => {\r\n    return (\r\n        <div>\r\n            <SectionHeader label=\"Timeline\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Experience\r\n","import React from 'react';\nimport './App.css';\nimport 'typeface-roboto';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nimport Header from './components/Header/Header';\nimport Projects from './components/Sections/Projects';\nimport Skills from './components/Sections/Skills';\nimport Blogs from './components/Sections/Blogs';\nimport Contact from './components/Sections/Contact';\nimport Experience from './components/Sections/Experience';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: 'center',\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  chip: {\n    marginRight: theme.spacing(1),\n  },\n  header: {\n    margin: theme.spacing(3),\n  },\n  section: {\n    margin: theme.spacing(2),\n  },\n  section3: {\n    margin: theme.spacing(3, 1, 1),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.root}>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      \n      <div className={classes.header}>\n        <Header/>\n      </div>\n      <Divider variant='middle'/>\n\n      <div className={classes.section}>\n        <Projects/>\n      </div>\n      <Divider variant='middle'/>\n\n      <div className={classes.section}>\n        <Skills/>\n      </div>\n      <Divider variant='middle'/>\n\n      <div hidden className={classes.section}>\n        <Experience/>\n      </div>\n      {/* <Divider variant='middle'/> */}\n\n      <div hidden className={classes.section}>\n        <Blogs/>\n      </div>\n      {/* <Divider variant='middle'/> */}\n\n      <div className={classes.section}>\n        <Contact/>\n      </div>\n      <Divider variant='middle'/>\n            \n      \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}